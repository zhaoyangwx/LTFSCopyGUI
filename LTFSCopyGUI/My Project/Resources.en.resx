<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StrBCSFail" xml:space="preserve">
    <value>Barcode write fail</value>
  </data>
  <data name="StrCMDHelpText" xml:space="preserve">
    <value>-s                                            Disable index reading
  -t &lt;drive&gt;                                    LTFSWriter
  ├  -t 0
  ├  -t TAPE0
  └  -t \\.\TAPE0
                                           
  -f &lt;file&gt;                                     Index viewer
  └   -f C:\tmp\ltfs\000000.schema
                                           
  -c                                            LTFSConfigurator
                                           
  -l                                            Changer Tool
                                           
  -rb &lt;drive&gt;                                   Barcode read
  ├  -rb 0
  ├  -rb TAPE0
  └  -rb \\.\TAPE0
                                           
  -wb &lt;drive&gt; &lt;barcode&gt;                         Barcode write
  └  -wb TAPE0 A00123L5                     
                                           
  -mkltfs &lt;drive&gt; [&lt;Barcode&gt; &lt;Volume Label&gt; &lt;Partition&gt; &lt;Capacity&gt; &lt;BlockLen&gt; &lt;P0Size&gt; &lt;P1Size&gt;]
                                                Format LTFS Volume
  *  Optional Parameters
  *  Barcode: 0-20 ASCII characters. Default=empty
  *  Volume Label: Unicode string. Default=empty
  *  Partition: 0 or 1. Default=1 (partitioned)
  *  Capacity: 0-65535. Default=65535 (Full length)
  *  BlockLen：1-2097152. Default=524288
  *  P0Size：Partition 0 Size in GB, will round up to nearest multiple-of-two wraps. Default=1
  *  P1Size：Partition 1 Size in GB, will round up to nearest multiple-of-two wraps. Default=65535
  *  If one Partition Size field is set to 65535, the corresponding partition will occupy whatever capacity remains after satisfying the specified size for the other partitions. At most one partition size may be set to 65535.
  *  If no Partition Size field is set to 65535, the sum of the specified partition sizes must not exceed the total available capacity
  ├  -mkltfs TAPE0 (= -mkltfs TAPE0 "" "" 1 65535 524288 1 65535)
  ├  -mkltfs TAPE0
  ├  -mkltfs TAPE0 C01234L5 "Tape 1234"
  ├  -mkltfs TAPE0 "" "" 1 48000
  ├  -mkltfs TAPE0 C01234L5 "Tape 1234" 1 65535 65536
  ├  -mkltfs TAPE0 C01234L5 "Tape 1234" 0
  └  -mkltfs TAPE0 C01234L5 "Tape 1234" 1 65535 524288 75 65535
                                           
  -raw &lt;drive&gt; &lt;cdb&gt; &lt;param&gt; &lt;dataDir&gt; &lt;timeout, default=60000&gt;         SCSI command execute
  └  -raw TAPE0 ""34 00 00 00 00 00 00 00 00"" ""00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"" 1 600
                                             
  -svc [&lt;port, default=25900&gt;]
                                                command server
  -remoteraw &lt;ip&gt; &lt;port&gt; &lt;drive&gt; &lt;cdb&gt; &lt;param&gt; &lt;dataDir&gt; [&lt;timeout, default=60000&gt;]
                                                remote SCSI command</value>
  </data>
  <data name="StrDefaultLicense" xml:space="preserve">
    <value> Non-commercial License</value>
  </data>
  <data name="StrFormatError" xml:space="preserve">
    <value>Format failed</value>
  </data>
  <data name="StrFormatFin" xml:space="preserve">
    <value>Format finished</value>
  </data>
  <data name="StrIndexView" xml:space="preserve">
    <value>Index view</value>
  </data>
  <data name="StrSCSIFail" xml:space="preserve">
    <value>SCSI command fail</value>
  </data>
  <data name="StrSCSISucc" xml:space="preserve">
    <value>SCSI command success</value>
  </data>
  <data name="ResText_CHashing" xml:space="preserve">
    <value>Hashing</value>
  </data>
  <data name="ResText_Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ResText_Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="ResText_WrittenTotal" xml:space="preserve">
    <value>Total written</value>
  </data>
  <data name="ResText_Remaining" xml:space="preserve">
    <value>Remain</value>
  </data>
  <data name="ResText_Writing" xml:space="preserve">
    <value>Writing</value>
  </data>
  <data name="ResText_WErr" xml:space="preserve">
    <value>Write error</value>
  </data>
  <data name="ResText_VOF" xml:space="preserve">
    <value>Volume overflow</value>
  </data>
  <data name="ResText_WFTime" xml:space="preserve">
    <value>Write finished. Time cost: </value>
  </data>
  <data name="ResText_AvgS" xml:space="preserve">
    <value>Average</value>
  </data>
  <data name="ResText_WCnd" xml:space="preserve">
    <value>Write cancelled</value>
  </data>
  <data name="ResText_RestoreErr" xml:space="preserve">
    <value>Restore error</value>
  </data>
  <data name="ResText_Restoring" xml:space="preserve">
    <value>Restoring</value>
  </data>
  <data name="ResText_OpCancelled" xml:space="preserve">
    <value>Operation cancelled</value>
  </data>
  <data name="ResText_RestFin" xml:space="preserve">
    <value>Restore finished</value>
  </data>
  <data name="ResText_PrepFile" xml:space="preserve">
    <value>Preparing files</value>
  </data>
  <data name="ResText_RestFile" xml:space="preserve">
    <value>Restoring files</value>
  </data>
  <data name="ResText_PrepW" xml:space="preserve">
    <value>Preparing to write</value>
  </data>
  <data name="ResText_DelConfrm" xml:space="preserve">
    <value>Delete </value>
  </data>
  <data name="ResText_DirName" xml:space="preserve">
    <value>Folder name</value>
  </data>
  <data name="ResText_RenameDir" xml:space="preserve">
    <value>Folder rename</value>
  </data>
  <data name="ResText_DirNIllegal" xml:space="preserve">
    <value>Illegal character detected in folder name</value>
  </data>
  <data name="ResText_DirNExist" xml:space="preserve">
    <value>Folder already exist</value>
  </data>
  <data name="ResText_NFName" xml:space="preserve">
    <value>New filename</value>
  </data>
  <data name="ResText_Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="ResText_FNIllegal" xml:space="preserve">
    <value>Illegal character detected in file name</value>
  </data>
  <data name="ResText_FNExist" xml:space="preserve">
    <value>File already exist</value>
  </data>
  <data name="ResText_Files_C" xml:space="preserve">
    <value> files?</value>
  </data>
  <data name="ResText_Adding" xml:space="preserve">
    <value>Adding </value>
  </data>
  <data name="ResText_Items_x" xml:space="preserve">
    <value> items</value>
  </data>
  <data name="ResText_AddFin" xml:space="preserve">
    <value>Adding complete</value>
  </data>
  <data name="ResText_DLFin" xml:space="preserve">
    <value>Label suffix changed to </value>
  </data>
  <data name="ResText_DragNA" xml:space="preserve">
    <value>Drag is currently disabled</value>
  </data>
  <data name="ResText_DLT" xml:space="preserve">
    <value>Label tool</value>
  </data>
  <data name="ResText_NewDir" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="ResText_DLS" xml:space="preserve">
    <value>Label suffix setting</value>
  </data>
  <data name="ResText_OverwritingDF" xml:space="preserve">
    <value>Overwrite different: </value>
  </data>
  <data name="ResText_FileRateBT" xml:space="preserve">
    <value>File rate</value>
  </data>
  <data name="ResText_SpeedBT" xml:space="preserve">
    <value>Speed (MiB/s)</value>
  </data>
  <data name="ResText_C0" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="ResText_C1" xml:space="preserve">
    <value>Capacity loss detected: </value>
  </data>
  <data name="ResText_C2" xml:space="preserve">
    <value>Last clean: </value>
  </data>
  <data name="ResText_S0" xml:space="preserve">
    <value>Speed:</value>
  </data>
  <data name="ResText_S1" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="ResText_S2" xml:space="preserve">
    <value>Remain:</value>
  </data>
  <data name="ResText_S3" xml:space="preserve">
    <value>Unindexed:</value>
  </data>
  <data name="ResText_Byte" xml:space="preserve">
    <value>Bytes</value>
  </data>
  <data name="ResText_S4" xml:space="preserve">
    <value>Progress:</value>
  </data>
  <data name="ResText_FSizeP" xml:space="preserve">
    <value>Size: </value>
  </data>
  <data name="ResText_ErrP" xml:space="preserve">
    <value>Cannot find valid LTFS partition</value>
  </data>
  <data name="ResText_FCountP" xml:space="preserve">
    <value>File count: </value>
  </data>
  <data name="ResText_X0" xml:space="preserve">
    <value>Operation in progress. Please wait.</value>
  </data>
  <data name="ResText_HFin" xml:space="preserve">
    <value>Hash complete</value>
  </data>
  <data name="ResText_NIndex" xml:space="preserve">
    <value>Index not loaded</value>
  </data>
  <data name="ResText_HErr" xml:space="preserve">
    <value>Hash error</value>
  </data>
  <data name="ResText_Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="ResText_Hashing" xml:space="preserve">
    <value>Hashing</value>
  </data>
  <data name="ResText_Partition" xml:space="preserve">
    <value>Partition</value>
  </data>
  <data name="ResText_Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="ResText_Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="ResText_Located" xml:space="preserve">
    <value>Located to </value>
  </data>
  <data name="ResText_Ejd" xml:space="preserve">
    <value>Tape ejected</value>
  </data>
  <data name="ResText_WritePointer" xml:space="preserve">
    <value>Write pointer</value>
  </data>
  <data name="ResText_RPosErr" xml:space="preserve">
    <value>Error getting current index position</value>
  </data>
  <data name="ResText_CapRem" xml:space="preserve">
    <value>Remaining</value>
  </data>
  <data name="ResText_RCErr" xml:space="preserve">
    <value>Fail to get remaining capacity</value>
  </data>
  <data name="ResText_DNW" xml:space="preserve">
    <value>Unwritten</value>
  </data>
  <data name="ResText_RDErr" xml:space="preserve">
    <value>Error refreshing display</value>
  </data>
  <data name="ResText_CRef" xml:space="preserve">
    <value>Remaining capacity refreshed</value>
  </data>
  <data name="ResText_CRefErr" xml:space="preserve">
    <value>Fail to refresh remaining capacity</value>
  </data>
  <data name="ResText_NavErr" xml:space="preserve">
    <value>Navigate error. Please retry</value>
  </data>
  <data name="ResText_Locating" xml:space="preserve">
    <value>Locating</value>
  </data>
  <data name="ResText_WriteWarning" xml:space="preserve">
    <value>Write warning</value>
  </data>
  <data name="ResText_EWEOM" xml:space="preserve">
    <value>Early warning end of media</value>
  </data>
  <data name="ResText_NHWrn" xml:space="preserve">
    <value>. All data after this position will be lost. Continue?</value>
  </data>
  <data name="ResText_X1" xml:space="preserve">
    <value>Operation in progress. Force terminate?</value>
  </data>
  <data name="ResText_X2" xml:space="preserve">
    <value>Unindexed data will be lost. Continue?</value>
  </data>
  <data name="ResText_X3" xml:space="preserve">
    <value>Volume will be inconsistent without updating index partition. Continue?</value>
  </data>
  <data name="ResText_PEj" xml:space="preserve">
    <value>Eject now?</value>
  </data>
  <data name="ResText_WErrSCSI" xml:space="preserve">
    <value>Write error: SCSI command failed.</value>
  </data>
  <data name="ResText_WFUp" xml:space="preserve">
    <value>Write finished. Update index at data partition? (Recommended)</value>
  </data>
  <data name="ResText_ILdedP" xml:space="preserve">
    <value>Index loaded. Consistency is not guaranteed. Operation is at your own risk.</value>
  </data>
  <data name="ResText_DataLossWarning" xml:space="preserve">
    <value>All data will be lost and cannot recover. Continue?</value>
  </data>
  <data name="ResText_SHA1Overw" xml:space="preserve">
    <value>Overwrite existing SHA1?</value>
  </data>
  <data name="ResText_SetH1" xml:space="preserve">
    <value>Set write pointer to current position </value>
  </data>
  <data name="ResText_SetH2" xml:space="preserve">
    <value>. Continue?</value>
  </data>
  <data name="ResText_SetH3" xml:space="preserve">
    <value>Click "Cancel" if not sure.</value>
  </data>
  <data name="ResText_CancelConfirm" xml:space="preserve">
    <value>Unfinished files will be lost. Continue?</value>
  </data>
  <data name="ResText_ClearWC" xml:space="preserve">
    <value>Reset counter value?</value>
  </data>
  <data name="ResText_RB4" xml:space="preserve">
    <value>Unindexed date will be lost. Write after rolling back will destroy all data after the checkpoint. Continue?</value>
  </data>
  <data name="ResText_GI" xml:space="preserve">
    <value>Generating index</value>
  </data>
  <data name="ResText_WI" xml:space="preserve">
    <value>Writing index</value>
  </data>
  <data name="ResText_WIF" xml:space="preserve">
    <value>Index written</value>
  </data>
  <data name="ResText_UDI" xml:space="preserve">
    <value>Updating index in data partition</value>
  </data>
  <data name="ResText_UI" xml:space="preserve">
    <value>Update indexes</value>
  </data>
  <data name="ResText_IUd" xml:space="preserve">
    <value>Index updated</value>
  </data>
  <data name="ResText_DPIUed" xml:space="preserve">
    <value>Data partition index updated</value>
  </data>
  <data name="ResText_RI" xml:space="preserve">
    <value>Reading index</value>
  </data>
  <data name="ResText_Exporting" xml:space="preserve">
    <value>Exporting</value>
  </data>
  <data name="ResText_Imported" xml:space="preserve">
    <value>Import finished</value>
  </data>
  <data name="ResText_IAErrp" xml:space="preserve">
    <value>Error parsing file: </value>
  </data>
  <data name="ResText_AI" xml:space="preserve">
    <value>Parsing index</value>
  </data>
  <data name="ResText_VCID" xml:space="preserve">
    <value>VCI data on tape：</value>
  </data>
  <data name="ResText_Importing" xml:space="preserve">
    <value>Importing</value>
  </data>
  <data name="ResText_AISucc" xml:space="preserve">
    <value>Index readed</value>
  </data>
  <data name="ResText_FmtFail" xml:space="preserve">
    <value>Format failed</value>
  </data>
  <data name="ResText_IndexBaked" xml:space="preserve">
    <value>Index backed up</value>
  </data>
  <data name="ResText_FmtFin" xml:space="preserve">
    <value>Format finished</value>
  </data>
  <data name="ResText_IndexBak2" xml:space="preserve">
    <value>Index backed up to </value>
  </data>
  <data name="ResText_LTFSVolumeN2" xml:space="preserve">
    <value>Volume label: </value>
  </data>
  <data name="ResText_IUErr" xml:space="preserve">
    <value>Error updating index</value>
  </data>
  <data name="ResText_Barcode2" xml:space="preserve">
    <value>Barcode: </value>
  </data>
  <data name="ResText_CurPos" xml:space="preserve">
    <value>Current position </value>
  </data>
  <data name="ResText_LTFSVolumeN" xml:space="preserve">
    <value>LTFS volume label</value>
  </data>
  <data name="ResText_IndexNAllowed" xml:space="preserve">
    <value>Index is not allowd to write at this position</value>
  </data>
  <data name="ResText_SetVolumeN" xml:space="preserve">
    <value>Set volume label</value>
  </data>
  <data name="ResText_DPIWritten" xml:space="preserve">
    <value>Data partition index written</value>
  </data>
  <data name="ResText_SetBarcode" xml:space="preserve">
    <value>Set barcode</value>
  </data>
  <data name="ResText_IndexBakF" xml:space="preserve">
    <value>Index backup failed</value>
  </data>
  <data name="ResText_DPIWFailed" xml:space="preserve">
    <value>Fail to write data partition index</value>
  </data>
  <data name="ResText_IPCanc" xml:space="preserve">
    <value>Operation cancelled. Current position is at index partition</value>
  </data>
  <data name="ResText_RollBacked" xml:space="preserve">
    <value>Located to index</value>
  </data>
  <data name="ResText_BlkSize" xml:space="preserve">
    <value>Block size</value>
  </data>
  <data name="ResText_RFailed" xml:space="preserve">
    <value>Read fail</value>
  </data>
  <data name="ResText_Barcode" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="ResText_RBFin" xml:space="preserve">
    <value>Roll back success</value>
  </data>
  <data name="ResText_RB1" xml:space="preserve">
    <value>Current index generation </value>
  </data>
  <data name="ResText_RBing" xml:space="preserve">
    <value>Rolling back</value>
  </data>
  <data name="ResText_RB2" xml:space="preserve">
    <value>:</value>
  </data>
  <data name="ResText_RB3" xml:space="preserve">
    <value>Last generation:</value>
  </data>
  <data name="ResText_IRFailed" xml:space="preserve">
    <value>Index read failed</value>
  </data>
  <data name="ResText_IRSucc" xml:space="preserve">
    <value>Index read success</value>
  </data>
  <data name="ResText_NVOL1" xml:space="preserve">
    <value>Mising VOL1Label</value>
  </data>
  <data name="ResText_NLTFS" xml:space="preserve">
    <value>LTFS not detected</value>
  </data>
  <data name="ResText_RLTFSInfo" xml:space="preserve">
    <value>Retrieving LTFS info</value>
  </data>
  <data name="ResText_SvBak" xml:space="preserve">
    <value>Saving backup</value>
  </data>
  <data name="ResText_Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ResText_Hint" xml:space="preserve">
    <value>Hint</value>
  </data>
  <data name="ResText_Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ResText_OpSucc" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ResText_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ResText_Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="ResText_SSMin" xml:space="preserve">
    <value>Lower limit (MiB/s)</value>
  </data>
  <data name="ResText_SFB" xml:space="preserve">
    <value>File buffer</value>
  </data>
  <data name="ResText_SSMax" xml:space="preserve">
    <value>Upper limit (MiB/s)</value>
  </data>
  <data name="ResText_SPreR" xml:space="preserve">
    <value>Preread files</value>
  </data>
  <data name="ResText_SSTime" xml:space="preserve">
    <value>Duration (Sec)</value>
  </data>
  <data name="ResText_SCIntv" xml:space="preserve">
    <value>Capacity refresh interval (Sec)</value>
  </data>
  <data name="ResText_SIIntv" xml:space="preserve">
    <value>Index interval (Bytes)</value>
  </data>
  <data name="ResText_CLNCS" xml:space="preserve">
    <value>Clean cycle before rethreading</value>
  </data>
  <data name="ResText_WLimS" xml:space="preserve">
    <value>Write speed limit (MiB/s)</value>
  </data>
  <data name="ResText_NoIndex" xml:space="preserve">
    <value>Index interval: Disabled</value>
  </data>
  <data name="ResText_IndexInterval" xml:space="preserve">
    <value>Index interval: </value>
  </data>
  <data name="ResText_CRDisabled" xml:space="preserve">
    <value>Capacity refresh interval: Disabled</value>
  </data>
  <data name="ResText_CRIntv" xml:space="preserve">
    <value>Capacity refresh interval: </value>
  </data>
  <data name="ResText_NoSLim" xml:space="preserve">
    <value>Speed limit: Unlimited</value>
  </data>
  <data name="ResText_SLim" xml:space="preserve">
    <value>Speed limit: </value>
  </data>
  <data name="ResText_RBCoff" xml:space="preserve">
    <value>Clean cycle before rethreading: Rethreading disabled</value>
  </data>
  <data name="ResText_RBC" xml:space="preserve">
    <value>Clean cycle before rethreading: </value>
  </data>
  <data name="ResText_PFC" xml:space="preserve">
    <value>Preread files: </value>
  </data>
  <data name="ResText_FB" xml:space="preserve">
    <value>File buffer: </value>
  </data>
  <data name="ResText_SMin" xml:space="preserve">
    <value>Lower limit: </value>
  </data>
  <data name="ResText_SMax" xml:space="preserve">
    <value>Upper limit: </value>
  </data>
  <data name="ResText_STime" xml:space="preserve">
    <value>Duration: </value>
  </data>
  <data name="ResText_FileOpenError" xml:space="preserve">
    <value>File open error</value>
  </data>
  <data name="ResText_UACConfirm" xml:space="preserve">
    <value>Will restart as privilege user. Continue?</value>
  </data>
  <data name="ResText_ClipBoard" xml:space="preserve">
    <value>ClipBoard</value>
  </data>
  <data name="ResText_LockDec" xml:space="preserve">
    <value>Decrease lock</value>
  </data>
  <data name="ResText_LockInc" xml:space="preserve">
    <value>Increase lock</value>
  </data>
  <data name="ResText_UIE" xml:space="preserve">
    <value>Update all indexes and eject?</value>
  </data>
  <data name="ResText_Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_AutoCleanTimeThreashould" xml:space="preserve">
    <value>Auto clean time threashould (seconds)</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_DeDupe" xml:space="preserve">
    <value>Dedupe</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_PowerPolicyOnWriteBegin" xml:space="preserve">
    <value>Power policy before write start</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_PowerPolicyOnWriteEnd" xml:space="preserve">
    <value>Power policy after write finished</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ShowFileCount" xml:space="preserve">
    <value>Show file count</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ShowLoss" xml:space="preserve">
    <value>Show capacity loss</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_SkipSymlink" xml:space="preserve">
    <value>Skip symbolic link on adding files</value>
  </data>
  <data name="PropertyDescription_Application_License" xml:space="preserve">
    <value>License string</value>
  </data>
  <data name="PropertyDescription_FileBrowser_CopyInfo" xml:space="preserve">
    <value>Copy file info to clipboard</value>
  </data>
  <data name="PropertyDescription_HashTaskWindow_ReHash" xml:space="preserve">
    <value>Re-hash</value>
  </data>
  <data name="PropertyDescription_IndexAnalyzer_Dest" xml:space="preserve">
    <value>Destination path</value>
  </data>
  <data name="PropertyDescription_IndexAnalyzer_GenCMD" xml:space="preserve">
    <value>Generate batch command</value>
  </data>
  <data name="PropertyDescription_IndexAnalyzer_LastFile" xml:space="preserve">
    <value>Last file</value>
  </data>
  <data name="PropertyDescription_IndexAnalyzer_Src" xml:space="preserve">
    <value>Source path</value>
  </data>
  <data name="PropertyDescription_LTFSConf_AutoRefresh" xml:space="preserve">
    <value>Automatically refresh device list</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_AutoCleanDownLim" xml:space="preserve">
    <value>Auto clean speed down limit</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_AutoCleanUpperLim" xml:space="preserve">
    <value>Auto clean speed upper limit</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_AutoFlush" xml:space="preserve">
    <value>Flush when capacity loss is detected</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_CapacityRefreshInterval" xml:space="preserve">
    <value>Capacity refresh interval</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_CleanCycle" xml:space="preserve">
    <value>Clean count before rethreading</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_DisablePartition" xml:space="preserve">
    <value>Disable partition</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_FileLabel" xml:space="preserve">
    <value>File label</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ForceIndex" xml:space="preserve">
    <value>Always update index at data partition</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_HashAsync" xml:space="preserve">
    <value>Hash async
Better performance, but more CPU cost
Valid only if HashOnWriting=True</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_HashOnWriting" xml:space="preserve">
    <value>Hash on writing</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_IndexWriteInterval" xml:space="preserve">
    <value>Index update interval (bytes)</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_LogEnabled" xml:space="preserve">
    <value>Log enabled</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_OnWriteFinished" xml:space="preserve">
    <value>On write finished:
  0 - Do nothing
  1 - Update data partition index
  2 - Update all indexes
  3 - Update indexes and eject</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_OverwriteExist" xml:space="preserve">
    <value>Overwrite when adding files</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_PreLoadBytes" xml:space="preserve">
    <value>Pre read bytes</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_PreLoadFileCount" xml:space="preserve">
    <value>Pre read file count</value>
  </data>
  <data name="PropertyDescription_mkltfs_Barcode" xml:space="preserve">
    <value>0-20 ASCII characters. Default=empty</value>
  </data>
  <data name="PropertyDescription_mkltfs_BlockLen" xml:space="preserve">
    <value>1-2097152. Default=524288</value>
  </data>
  <data name="PropertyDescription_mkltfs_Capacity" xml:space="preserve">
    <value>0-65535. Default=65535 (Full length)</value>
  </data>
  <data name="PropertyDescription_mkltfs_EncryptionKey" xml:space="preserve">
    <value>Encryption key</value>
  </data>
  <data name="PropertyDescription_mkltfs_ExtraPartitionCount" xml:space="preserve">
    <value>0 or 1. Default=1 (partitioned)</value>
  </data>
  <data name="PropertyDescription_mkltfs_ImmediateMode" xml:space="preserve">
    <value>Unused</value>
  </data>
  <data name="PropertyDescription_mkltfs_MaxExtraPartitionAllowed" xml:space="preserve">
    <value>Extra partition number allowed. Readonly.</value>
  </data>
  <data name="PropertyDescription_mkltfs_P0Size" xml:space="preserve">
    <value>Partition 0 Size in GB, will round up to nearest multiple-of-two wraps. Default=1
If one Partition Size field is set to 65535, the corresponding partition will occupy whatever capacity remains after satisfying the specified size for the other partitions. At most one partition size may be set to 65535.
If no Partition Size field is set to 65535, the sum of the specified partition sizes must not exceed the total available capacity</value>
  </data>
  <data name="PropertyDescription_mkltfs_P1Size" xml:space="preserve">
    <value>Partition 1 Size in GB, will round up to nearest multiple-of-two wraps. Default=65535
If one Partition Size field is set to 65535, the corresponding partition will occupy whatever capacity remains after satisfying the specified size for the other partitions. At most one partition size may be set to 65535.
If no Partition Size field is set to 65535, the sum of the specified partition sizes must not exceed the total available capacity</value>
  </data>
  <data name="PropertyDescription_mkltfs_VolumeLabel" xml:space="preserve">
    <value>Unicode string. Default=empty</value>
  </data>
  <data name="ResText_Busy" xml:space="preserve">
    <value>Busy</value>
  </data>
  <data name="ResText_Idle" xml:space="preserve">
    <value>Idle</value>
  </data>
  <data name="ResText_NotReady" xml:space="preserve">
    <value>Not ready</value>
  </data>
  <data name="ResText_Succ" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ResText_ErrRateLog" xml:space="preserve">
    <value>Error rate log value: </value>
  </data>
  <data name="PropertyDescription_LTFSWriter_AutoCleanErrRateLogThreashould" xml:space="preserve">
    <value>Auto clean error rate log value down limit</value>
  </data>
  <data name="ResText_RErrSCSI" xml:space="preserve">
    <value>Read error: SCSI command failed.</value>
  </data>
  <data name="ResText_CapLossPerfWarning" xml:space="preserve">
    <value>Showing capacity loss will significantly reduce write performance. Continue?</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ChecksumEnabled_BLAKE3" xml:space="preserve">
    <value>Checksum switch - BLAKE3</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ChecksumEnabled_MD5" xml:space="preserve">
    <value>Checksum switch - MD5</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ChecksumEnabled_SHA1" xml:space="preserve">
    <value>Checksum switch - SHA1</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ChecksumEnabled_XxHash3" xml:space="preserve">
    <value>Checksum switch - XxHash3</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ChecksumEnabled_XxHash128" xml:space="preserve">
    <value>Checksum switch - XxHash128</value>
  </data>
  <data name="PropertyDescription_TapeUtils_DriverType" xml:space="preserve">
    <value>Driver command type</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_AutoFlushCooldownMilliseconds" xml:space="preserve">
    <value>Cool down milliseconds after capacity loss</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_IgnoreVolumeOverflow" xml:space="preserve">
    <value>Ignore Volume Overflow</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_ColumnIndex" xml:space="preserve">
    <value>Column index</value>
  </data>
  <data name="PropertyDescription_LTFSWriter_KeepUnwrittenFilesOnAbort" xml:space="preserve">
    <value>Keep unwritten files on cancel writing</value>
  </data>
  <data name="ResText_Directories_C" xml:space="preserve">
    <value> directories?</value>
  </data>
  <data name="DefaultLicense" xml:space="preserve">
    <value> Non-commercial License</value>
  </data>
  <data name="LicenseInvalid" xml:space="preserve">
    <value>License invalid</value>
  </data>
  <data name="ResText_S5" xml:space="preserve">
    <value>Buffered:</value>
  </data>
  <data name="PropertyDescription_LTFSConf_CMDList" xml:space="preserve">
    <value>Send command</value>
  </data>
</root>